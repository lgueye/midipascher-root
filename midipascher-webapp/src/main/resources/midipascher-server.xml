<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd  
	http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:property-placeholder location="classpath:persistence.properties" />

	<context:component-scan
		base-package="fr.midipascher.persistence,fr.midipascher.business" />

	<!-- PERSISTENCE -->

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${javax.persistence.jdbc.driver}" />
		<property name="url" value="${javax.persistence.jdbc.url}" />
		<property name="username" value="${javax.persistence.jdbc.user}" />
		<property name="password" value="${javax.persistence.jdbc.password}" />
	</bean>
	
	<bean id="hibernatePersistenceProvider"
		class="fr.midipascher.persistence.impl.HibernateExtendedPersistenceProvider">
		<property name="preInsertEventListeners">
			<list>
				<ref bean="preInsertEventListener" />
			</list>
		</property>
		<property name="preUpdateEventListeners">
			<list>
				<ref bean="preUpdateEventListener" />
			</list>
		</property>
		<property name="preDeleteEventListeners">
			<list>
				<ref bean="preDeleteEventListener" />
			</list>
		</property>
	</bean>
	
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="midipascher-persistence-unit" />
		<property name="persistenceProvider" ref="hibernatePersistenceProvider" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="javax.persistence.jdbc.driver">${javax.persistence.jdbc.driver}</prop>
				<prop key="javax.persistence.jdbc.url">${javax.persistence.jdbc.url}</prop>
				<prop key="javax.persistence.jdbc.user">${javax.persistence.jdbc.user}</prop>
				<prop key="javax.persistence.jdbc.password">${javax.persistence.jdbc.password}</prop>
				<!-- 
				<prop key="javax.persistence.validation.group.pre-persist">fr.midipascher.domain.validation.Create</prop>
				<prop key="javax.persistence.validation.group.pre-update">fr.midipascher.domain.validation.Update</prop>
				<prop key="javax.persistence.validation.group.pre-remove">fr.midipascher.domain.validation.Delete</prop>
				<prop key="hibernate.ejb.event.pre-insert">org.hibernate.cfg.beanvalidation.BeanValidationEventListener
				</prop>
				<prop key="hibernate.ejb.event.pre-update">org.hibernate.cfg.beanvalidation.BeanValidationEventListener
				</prop>
				<prop key="hibernate.ejb.event.pre-delete">org.hibernate.cfg.beanvalidation.BeanValidationEventListener
				</prop>
				 -->
			</props>
		</property>
	</bean>

</beans>

