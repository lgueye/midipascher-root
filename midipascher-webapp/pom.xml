<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>midipascher-root</artifactId>
		<groupId>fr.midipascher</groupId>
		<version>0.1-SNAPSHOT</version>
	</parent>
	<artifactId>midipascher-webapp</artifactId>
	<packaging>war</packaging>
	<name>midipascher-webapp</name>
	<url>http://midipascher.fr</url>
	<dependencies>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator-annotation-processor</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-xc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jbehave</groupId>
			<artifactId>jbehave-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-apache-client4</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jbehave</groupId>
			<artifactId>jbehave-core</artifactId>
			<classifier>resources</classifier>
			<type>zip</type>
		</dependency>
	</dependencies>
	<build>
		<finalName>${webapp.module.context}</finalName>
	</build>
	<profiles>
		<profile>
			<id>embedded</id>
			<build>
				<resources>
					<!-- Copy .properties files to output and filter them -->
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
						<includes>
							<include>**/*.properties</include>
							<include>**/log4j.xml</include>
						</includes>
					</resource>
					<!-- Copy .xml files to output and do not filter them -->
					<resource>
						<directory>src/main/resources</directory>
						<filtering>false</filtering>
					</resource>
				</resources>
				<testResources>
					<!-- Copy .properties files to output and filter them -->
					<testResource>
						<directory>src/test/resources</directory>
						<filtering>true</filtering>
						<includes>
							<include>**/*.properties</include>
							<include>**/log4j.xml</include>
						</includes>
					</testResource>
					<!-- Copy .xml files to output and do not filter them -->
					<testResource>
						<directory>src/test/resources</directory>
						<filtering>false</filtering>
					</testResource>
				</testResources>

				<plugins>
					<!-- Starts an H2 tcp server -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<dependencies>
							<dependency>
								<groupId>com.h2database</groupId>
								<artifactId>h2</artifactId>
								<version>${h2.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<!-- start server before integration tests -->
								<id>start-database</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<includePluginDependencies>true</includePluginDependencies>
									<mainClass>org.h2.tools.Server</mainClass>
									<arguments>
										<argument>-tcp</argument>
										<argument>-tcpDaemon</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<!-- stop server after integration tests -->
								<id>stop-database</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>org.h2.tools.Server</mainClass>
									<arguments>
										<argument>-tcpShutdownForce</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Runs tests that end with TestIT (database) tests -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
					</plugin>
					<!-- Starts an embedded container and deploys the war to that container -->
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dbunit-maven-plugin</artifactId>
						<configuration>
							<driver>${javax.persistence.jdbc.driver}</driver>
							<url>${javax.persistence.jdbc.url}</url>
							<username>${javax.persistence.jdbc.user}</username>
							<password>${javax.persistence.jdbc.password}</password>
						</configuration>
						<executions>
							<execution>
								<phase>integration-test</phase>
								<goals>
									<goal>operation</goal>
								</goals>
								<configuration>
									<format>flat</format>
									<type>CLEAN_INSERT</type>
									<src>src/test/resources/dbunit/acceptance-test-data.xml</src>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Runs the acceptance tests against the running container -->
					<plugin>
						<groupId>org.jbehave</groupId>
						<artifactId>jbehave-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>integration</id>
			<build>
				<resources>
					<!-- Copy .properties files to output and filter them -->
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
						<includes>
							<include>**/*.properties</include>
							<include>**/log4j.xml</include>
						</includes>
					</resource>
					<!-- Copy .xml files to output and do not filter them -->
					<resource>
						<directory>src/main/resources</directory>
						<filtering>false</filtering>
						<includes>
							<include>**/*.*</include>
						</includes>
					</resource>
				</resources>
				<testResources>
					<!-- Copy .properties files to output and filter them -->
					<testResource>
						<directory>src/test/resources</directory>
						<filtering>true</filtering>
						<includes>
							<include>**/*.properties</include>
							<include>**/*.log4j.xml</include>
						</includes>
					</testResource>
					<!-- Copy .xml files to output and do not filter them -->
					<testResource>
						<directory>src/test/resources</directory>
						<filtering>false</filtering>
						<includes>
							<include>**/*.*</include>
						</includes>
					</testResource>
				</testResources>

				<plugins>
					<!-- Runs tests that end with TestIT (database) tests -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
					</plugin>
					<!-- Deploys the war to the running container -->
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-plugin</artifactId>
					</plugin>
					<!-- Runs the acceptance tests against the running container -->
					<plugin>
						<groupId>org.jbehave</groupId>
						<artifactId>jbehave-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>production</id>
			<build>
				<resources>
					<!-- Copy .properties files to output and filter them -->
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
						<includes>
							<include>**/*.properties</include>
							<include>**/*.log4j.xml</include>
						</includes>
					</resource>
					<!-- Copy .xml files to output and do not filter them -->
					<resource>
						<directory>src/main/resources</directory>
						<filtering>false</filtering>
						<includes>
							<include>**/*.*</include>
						</includes>
					</resource>
				</resources>

				<plugins>
					<!-- Deploys the war to the running container -->
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>	